Goal of the application
To automate everyday work of an administrator at a service station.
Application functionality
The only user of the application should be the administrator of the service station. That user serves two clients types: new clients and returning clients. Clients specify their name and surname to the administrator to register an order. The administrator should check whether the client is registered in the client base or not.
It should be possible to open a client card with personal data (see the description below) for existing users. Each client card has the following information about related cars:
Х             Make

Х             Model

Х             Year

Х             VIN

The administrator can edit the list of cars for the client: add, edit or delete (deletion is only possible if there are no orders related to the car).
It should also be possible to see the list of orders per each car. Each order contains the following information:
Х             Date

Х             Order Amount  (US$ 0,0 Ц 10,000)

Х             Order Status (Completed / In Progress / Cancelled)

The administrator can edit the list of orders for the car: add, edit or delete.
It should be possible to create a client card for new clients who havenТt been registered in the application before. This card should have the following parameters:
Х             First Name

Х             Last Name

Х             Date of Birth

Х             Address

Х             Phone

Х             Email

Application requirements
The whole user interface of the application should be developed in English (Cyrillic support is not necessary).
The user interface of the application should be user friendly and efficient. That means users can quickly perform required actions without discomfort.
The system should be implemented as a web-application. You can use Java, Groovy or NodeJS programming languages Ц itТs your choice. In the same way, you can develop the system as single-page application with any JavaScript framework (AngularJS, Backbone, Ember etc.).
How we assess
Your work will be assessed based on the following criteria:
Х             Code structure and object model usage

Х             Usability of application user interface

Х             Application data structure and data processing

Х             Error handling and validation of user data
AngularJS,NodeJS(server),Hibernate,Bootstrap,Spring,Maven,GitHub,Git,facebook api как устроено как делать restful api(sproektirovat realizocat protestirovat)
